#ifndef EHN_PRAC3_H
#define EHN_PRAC3_H

// Common includes
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <stdbool.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/timeb.h>
#include <ctype.h>

// Common defines


// Body
//Body
/// The struct used to store the current state of the RC4 encryption algorithm
struct rc4info_t
{
    int S[255];
    int i,j;
};

/// Swaps the value of the two integer pointers passed as arguments
/// \param a A pointer to one of the integers to be swapped
/// \param b A pointer to the other of the integers to be swapped
void swap(int *a, int *b);

/// Sets up the RC4 algorithm variables using the key and performs the initial permutation
/// \param rc4i A pointer to the struct that will hold all the state variables for the RC4 algorithm
/// \param key An array of 8 bit values that represent the key
/// \param keylen The length of the key in bytes
void rc4_init(struct rc4info_t *rc4i, unsigned char *key, int keylen);

/// Returns the next byte of the stream cipher that can be used to encrypt a value. Updates the state variables
/// accordingly
/// \param rc4i A pointer to the struct that will hold all the state variables for the RC4 algorithm
/// \return The byte generated by the RC4 algorithm
unsigned char rc4_getbyte(struct rc4info_t *rc4i);




#endif //EHN_PRAC3_H

